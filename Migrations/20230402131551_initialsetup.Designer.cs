// <auto-generated />
using CTM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CTM.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230402131551_initialsetup")]
    partial class initialsetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CTM.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            name = "C"
                        },
                        new
                        {
                            Id = 2,
                            name = "C++"
                        },
                        new
                        {
                            Id = 3,
                            name = "C#"
                        },
                        new
                        {
                            Id = 4,
                            name = "Java"
                        },
                        new
                        {
                            Id = 5,
                            name = "Python"
                        });
                });

            modelBuilder.Entity("CTM.Models.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Qualifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            description = "Способен применять компьютерные/суперкомпьютерные методы",
                            name = "ОПК-2"
                        },
                        new
                        {
                            Id = 2,
                            description = "Способен к разработке алгоритмических и программных решений в области системного и прикладного программирования",
                            name = "ОПК-3"
                        },
                        new
                        {
                            Id = 3,
                            description = "Способен осуществлять поиск, критический анализ и синтез информации",
                            name = "УК-1"
                        });
                });

            modelBuilder.Entity("CTM.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("CTM.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("eMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            eMail = "ivanovii@mail.ru",
                            name = "Иванов Иван Иванович",
                            password = "ivanovPassword"
                        },
                        new
                        {
                            Id = 2,
                            eMail = "petrovpp@mail.ru",
                            name = "Петров Петр Петрович",
                            password = "petrovPassword"
                        },
                        new
                        {
                            Id = 3,
                            eMail = "maksimovmm@mail.ru",
                            name = "Максимов Максим Максимович",
                            password = "maksimovPassword"
                        });
                });

            modelBuilder.Entity("CTM.Models.UserLanguageLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("languageId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserLanguageLinks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            languageId = 1,
                            userId = 1
                        },
                        new
                        {
                            Id = 2,
                            languageId = 2,
                            userId = 1
                        },
                        new
                        {
                            Id = 3,
                            languageId = 1,
                            userId = 2
                        },
                        new
                        {
                            Id = 4,
                            languageId = 3,
                            userId = 2
                        },
                        new
                        {
                            Id = 5,
                            languageId = 4,
                            userId = 3
                        },
                        new
                        {
                            Id = 6,
                            languageId = 5,
                            userId = 3
                        });
                });

            modelBuilder.Entity("CTM.Models.UserQualificationLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("qualificationId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserQualificationLinks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            qualificationId = 1,
                            userId = 1
                        },
                        new
                        {
                            Id = 2,
                            qualificationId = 2,
                            userId = 1
                        },
                        new
                        {
                            Id = 3,
                            qualificationId = 3,
                            userId = 1
                        },
                        new
                        {
                            Id = 4,
                            qualificationId = 1,
                            userId = 2
                        },
                        new
                        {
                            Id = 5,
                            qualificationId = 2,
                            userId = 2
                        },
                        new
                        {
                            Id = 6,
                            qualificationId = 1,
                            userId = 3
                        },
                        new
                        {
                            Id = 7,
                            qualificationId = 3,
                            userId = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
